{
 "openapi": "3.0.1",
 "info": {
  "title": "OpenAPI Demo",
  "description": "Automatically generated",
  "contact": {
   "name": "wzshiming",
   "url": "https://github.com/wzshiming/gen"
  },
  "version": "0.0.1"
 },
 "servers": [
  {
   "url": "/"
  },
  {
   "url": "{scheme}{host}{port}{path}",
   "variables": {
    "host": {
     "enum": [
      "localhost"
     ],
     "default": "localhost"
    },
    "path": {
     "enum": [
      "/"
     ],
     "default": "/"
    },
    "port": {
     "enum": [
      ""
     ],
     "default": ""
    },
    "scheme": {
     "enum": [
      "http://",
      "https://"
     ],
     "default": "http://"
    }
   }
  }
 ],
 "paths": {
  "/auth": {
   "get": {
    "tags": [
     "AuthService"
    ],
    "summary": "List of the Auth ",
    "description": "List of the Auth \n\n#route:\"GET /\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/offset_query"
     },
     {
      "$ref": "#/components/parameters/limit_query"
     }
    ],
    "responses": {
     "200": {
      "description": "Response code is 200",
      "content": {
       "application/json": {
        "schema": {
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/AuthWithID"
         }
        }
       }
      }
     },
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    },
    "security": [
     {
      "VerifyApiKey": []
     },
     {
      "VerifyBasic": []
     }
    ]
   },
   "post": {
    "tags": [
     "AuthService"
    ],
    "summary": "Create a Auth ",
    "description": "Create a Auth \n\n#route:\"POST /\"#",
    "requestBody": {
     "$ref": "#/components/requestBodies/auth_body"
    },
    "responses": {
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    },
    "security": [
     {
      "VerifyApiKey": []
     },
     {
      "VerifyBasic": []
     }
    ]
   }
  },
  "/auth/{auth_id}": {
   "get": {
    "tags": [
     "AuthService"
    ],
    "summary": "Get the Auth ",
    "description": "Get the Auth \n\n#route:\"GET /{auth_id}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/auth_id_path"
     }
    ],
    "responses": {
     "200": {
      "description": "Response code is 200",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/AuthWithID"
        }
       }
      }
     },
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    },
    "security": [
     {
      "VerifyApiKey": []
     },
     {
      "VerifyBasic": []
     }
    ]
   },
   "put": {
    "tags": [
     "AuthService"
    ],
    "summary": "Update the Auth ",
    "description": "Update the Auth \n\n#route:\"PUT /{auth_id}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/auth_id_path"
     }
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/auth_body"
    },
    "responses": {
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    },
    "security": [
     {
      "VerifyApiKey": []
     },
     {
      "VerifyBasic": []
     }
    ]
   },
   "delete": {
    "tags": [
     "AuthService"
    ],
    "summary": "Delete the Auth ",
    "description": "Delete the Auth \n\n#route:\"DELETE /{auth_id}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/auth_id_path"
     }
    ],
    "responses": {
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    },
    "security": [
     {
      "VerifyApiKey": []
     },
     {
      "VerifyBasic": []
     }
    ]
   }
  },
  "/file": {
   "post": {
    "tags": [
     "FileService"
    ],
    "summary": "Upload a file ",
    "description": "Upload a file \n\n#route:\"POST /\"#",
    "requestBody": {
     "$ref": "#/components/requestBodies/file_body"
    },
    "responses": {
     "200": {
      "description": "Response code is 200",
      "content": {
       "application/json": {
        "schema": {
         "type": "string"
        }
       }
      }
     },
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   }
  },
  "/file/{filename}": {
   "get": {
    "tags": [
     "FileService"
    ],
    "summary": "Get a file ",
    "description": "Get a file \n\n#route:\"GET /{filename}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/filename_path"
     }
    ],
    "responses": {
     "200": {
      "description": "\n\n#content:\"application/octet-stream\"#",
      "content": {
       "application/octet-stream": {
        "schema": {
         "type": "string",
         "format": "binary"
        }
       }
      }
     },
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   }
  },
  "/group/auth": {
   "get": {
    "tags": [
     "Group"
    ],
    "summary": "List of the Auth ",
    "description": "List of the Auth \n\n#route:\"GET /\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/offset_query"
     },
     {
      "$ref": "#/components/parameters/limit_query"
     }
    ],
    "responses": {
     "200": {
      "description": "Response code is 200",
      "content": {
       "application/json": {
        "schema": {
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/AuthWithID"
         }
        }
       }
      }
     },
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    },
    "security": [
     {
      "VerifyApiKey": []
     },
     {
      "VerifyBasic": []
     }
    ]
   },
   "post": {
    "tags": [
     "Group"
    ],
    "summary": "Create a Auth ",
    "description": "Create a Auth \n\n#route:\"POST /\"#",
    "requestBody": {
     "$ref": "#/components/requestBodies/auth_body"
    },
    "responses": {
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    },
    "security": [
     {
      "VerifyApiKey": []
     },
     {
      "VerifyBasic": []
     }
    ]
   }
  },
  "/group/auth/{auth_id}": {
   "get": {
    "tags": [
     "Group"
    ],
    "summary": "Get the Auth ",
    "description": "Get the Auth \n\n#route:\"GET /{auth_id}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/auth_id_path"
     }
    ],
    "responses": {
     "200": {
      "description": "Response code is 200",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/AuthWithID"
        }
       }
      }
     },
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    },
    "security": [
     {
      "VerifyApiKey": []
     },
     {
      "VerifyBasic": []
     }
    ]
   },
   "put": {
    "tags": [
     "Group"
    ],
    "summary": "Update the Auth ",
    "description": "Update the Auth \n\n#route:\"PUT /{auth_id}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/auth_id_path"
     }
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/auth_body"
    },
    "responses": {
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    },
    "security": [
     {
      "VerifyApiKey": []
     },
     {
      "VerifyBasic": []
     }
    ]
   },
   "delete": {
    "tags": [
     "Group"
    ],
    "summary": "Delete the Auth ",
    "description": "Delete the Auth \n\n#route:\"DELETE /{auth_id}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/auth_id_path"
     }
    ],
    "responses": {
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    },
    "security": [
     {
      "VerifyApiKey": []
     },
     {
      "VerifyBasic": []
     }
    ]
   }
  },
  "/group/file": {
   "post": {
    "tags": [
     "Group"
    ],
    "summary": "Upload a file ",
    "description": "Upload a file \n\n#route:\"POST /\"#",
    "requestBody": {
     "$ref": "#/components/requestBodies/file_body"
    },
    "responses": {
     "200": {
      "description": "Response code is 200",
      "content": {
       "application/json": {
        "schema": {
         "type": "string"
        }
       }
      }
     },
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   }
  },
  "/group/file/{filename}": {
   "get": {
    "tags": [
     "Group"
    ],
    "summary": "Get a file ",
    "description": "Get a file \n\n#route:\"GET /{filename}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/filename_path"
     }
    ],
    "responses": {
     "200": {
      "description": "\n\n#content:\"application/octet-stream\"#",
      "content": {
       "application/octet-stream": {
        "schema": {
         "type": "string",
         "format": "binary"
        }
       }
      }
     },
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   }
  },
  "/group/item": {
   "get": {
    "tags": [
     "Group"
    ],
    "summary": "List of the Item ",
    "description": "List of the Item \n\n#route:\"GET /\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/offset_query.1"
     },
     {
      "$ref": "#/components/parameters/limit_query.1"
     }
    ],
    "responses": {
     "200": {
      "description": "Response code is 200",
      "content": {
       "application/json": {
        "schema": {
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/ItemWithID"
         }
        }
       }
      }
     },
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   },
   "post": {
    "tags": [
     "Group"
    ],
    "summary": "Create a Item ",
    "description": "Create a Item \n\n#route:\"POST /\"#",
    "requestBody": {
     "$ref": "#/components/requestBodies/item_body"
    },
    "responses": {
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   }
  },
  "/group/item/{item_id}": {
   "get": {
    "tags": [
     "Group"
    ],
    "summary": "Get the Item ",
    "description": "Get the Item \n\n#route:\"GET /{item_id}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/item_id_path"
     }
    ],
    "responses": {
     "200": {
      "description": "Response code is 200",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/ItemWithID"
        }
       }
      }
     },
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   },
   "put": {
    "tags": [
     "Group"
    ],
    "summary": "Update the Item ",
    "description": "Update the Item \n\n#route:\"PUT /{item_id}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/item_id_path"
     }
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/item_body"
    },
    "responses": {
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   },
   "delete": {
    "tags": [
     "Group"
    ],
    "summary": "Delete the Item ",
    "description": "Delete the Item \n\n#route:\"DELETE /{item_id}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/item_id_path"
     }
    ],
    "responses": {
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   }
  },
  "/group/midd": {
   "get": {
    "tags": [
     "Group"
    ],
    "summary": "List of the Midd ",
    "description": "List of the Midd \n\n#route:\"GET /\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/x-token_header"
     },
     {
      "$ref": "#/components/parameters/offset_query.2"
     },
     {
      "$ref": "#/components/parameters/limit_query.2"
     }
    ],
    "responses": {
     "200": {
      "description": "Response code is 200",
      "content": {
       "application/json": {
        "schema": {
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/MiddWithID"
         }
        }
       }
      }
     },
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   },
   "post": {
    "tags": [
     "Group"
    ],
    "summary": "Create a Midd ",
    "description": "Create a Midd \n\n#route:\"POST /\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/x-token_header"
     }
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/midd_body"
    },
    "responses": {
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   }
  },
  "/group/midd/{midd_id}": {
   "get": {
    "tags": [
     "Group"
    ],
    "summary": "Get the Midd ",
    "description": "Get the Midd \n\n#route:\"GET /{midd_id}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/x-token_header"
     },
     {
      "$ref": "#/components/parameters/midd_id_path"
     }
    ],
    "responses": {
     "200": {
      "description": "Response code is 200",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/MiddWithID"
        }
       }
      }
     },
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   },
   "put": {
    "tags": [
     "Group"
    ],
    "summary": "Update the Midd ",
    "description": "Update the Midd \n\n#route:\"PUT /{midd_id}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/x-token_header"
     },
     {
      "$ref": "#/components/parameters/midd_id_path"
     }
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/midd_body"
    },
    "responses": {
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   },
   "delete": {
    "tags": [
     "Group"
    ],
    "summary": "Delete the Midd ",
    "description": "Delete the Midd \n\n#route:\"DELETE /{midd_id}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/x-token_header"
     },
     {
      "$ref": "#/components/parameters/midd_id_path"
     }
    ],
    "responses": {
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   }
  },
  "/item": {
   "get": {
    "tags": [
     "ItemService"
    ],
    "summary": "List of the Item ",
    "description": "List of the Item \n\n#route:\"GET /\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/offset_query.1"
     },
     {
      "$ref": "#/components/parameters/limit_query.1"
     }
    ],
    "responses": {
     "200": {
      "description": "Response code is 200",
      "content": {
       "application/json": {
        "schema": {
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/ItemWithID"
         }
        }
       }
      }
     },
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   },
   "post": {
    "tags": [
     "ItemService"
    ],
    "summary": "Create a Item ",
    "description": "Create a Item \n\n#route:\"POST /\"#",
    "requestBody": {
     "$ref": "#/components/requestBodies/item_body"
    },
    "responses": {
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   }
  },
  "/item/{item_id}": {
   "get": {
    "tags": [
     "ItemService"
    ],
    "summary": "Get the Item ",
    "description": "Get the Item \n\n#route:\"GET /{item_id}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/item_id_path"
     }
    ],
    "responses": {
     "200": {
      "description": "Response code is 200",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/ItemWithID"
        }
       }
      }
     },
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   },
   "put": {
    "tags": [
     "ItemService"
    ],
    "summary": "Update the Item ",
    "description": "Update the Item \n\n#route:\"PUT /{item_id}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/item_id_path"
     }
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/item_body"
    },
    "responses": {
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   },
   "delete": {
    "tags": [
     "ItemService"
    ],
    "summary": "Delete the Item ",
    "description": "Delete the Item \n\n#route:\"DELETE /{item_id}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/item_id_path"
     }
    ],
    "responses": {
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   }
  },
  "/midd": {
   "get": {
    "tags": [
     "MiddService"
    ],
    "summary": "List of the Midd ",
    "description": "List of the Midd \n\n#route:\"GET /\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/x-token_header"
     },
     {
      "$ref": "#/components/parameters/offset_query.2"
     },
     {
      "$ref": "#/components/parameters/limit_query.2"
     }
    ],
    "responses": {
     "200": {
      "description": "Response code is 200",
      "content": {
       "application/json": {
        "schema": {
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/MiddWithID"
         }
        }
       }
      }
     },
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   },
   "post": {
    "tags": [
     "MiddService"
    ],
    "summary": "Create a Midd ",
    "description": "Create a Midd \n\n#route:\"POST /\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/x-token_header"
     }
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/midd_body"
    },
    "responses": {
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   }
  },
  "/midd/{midd_id}": {
   "get": {
    "tags": [
     "MiddService"
    ],
    "summary": "Get the Midd ",
    "description": "Get the Midd \n\n#route:\"GET /{midd_id}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/x-token_header"
     },
     {
      "$ref": "#/components/parameters/midd_id_path"
     }
    ],
    "responses": {
     "200": {
      "description": "Response code is 200",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/MiddWithID"
        }
       }
      }
     },
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   },
   "put": {
    "tags": [
     "MiddService"
    ],
    "summary": "Update the Midd ",
    "description": "Update the Midd \n\n#route:\"PUT /{midd_id}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/x-token_header"
     },
     {
      "$ref": "#/components/parameters/midd_id_path"
     }
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/midd_body"
    },
    "responses": {
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   },
   "delete": {
    "tags": [
     "MiddService"
    ],
    "summary": "Delete the Midd ",
    "description": "Delete the Midd \n\n#route:\"DELETE /{midd_id}\"#",
    "parameters": [
     {
      "$ref": "#/components/parameters/x-token_header"
     },
     {
      "$ref": "#/components/parameters/midd_id_path"
     }
    ],
    "responses": {
     "400": {
      "description": "Response code is 400",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/Error"
        }
       },
       "text/plain": {
        "schema": {
         "type": "string",
         "format": "error"
        }
       }
      }
     }
    }
   }
  }
 },
 "components": {
  "schemas": {
   "Auth": {
    "required": [
     "name",
     "message"
    ],
    "type": "object",
    "properties": {
     "message": {
      "type": "string",
      "description": "Name is the message\n"
     },
     "name": {
      "type": "string",
      "description": "Name is the name\n"
     }
    },
    "description": "Auth is a auth\n"
   },
   "AuthService.1": {
    "type": "object",
    "description": "AuthService \n\n\n#path:\"/auth/\"#"
   },
   "AuthWithID": {
    "required": [
     "auth_id"
    ],
    "type": "object",
    "allOf": [
     {
      "allOf": [
       {
        "$ref": "#/components/schemas/Auth"
       }
      ],
      "description": "Auth is a auth\n"
     }
    ],
    "properties": {
     "auth_id": {
      "type": "string",
      "format": "int64"
     }
    },
    "description": "AuthWithID is Auth with ID\n"
   },
   "Error": {
    "required": [
     "error"
    ],
    "type": "object",
    "properties": {
     "error": {
      "type": "string"
     }
    }
   },
   "FileService.1": {
    "required": [
     "BasePath"
    ],
    "type": "object",
    "properties": {
     "BasePath": {
      "type": "string"
     }
    },
    "description": "FileService \n\n\n#path:\"/file/\"#"
   },
   "Item": {
    "required": [
     "Name",
     "Message"
    ],
    "type": "object",
    "properties": {
     "Message": {
      "type": "string",
      "description": "Message is the message of item\n"
     },
     "Name": {
      "type": "string",
      "description": "Name is the name of item\n"
     }
    },
    "description": "Item is a item\n"
   },
   "ItemService": {
    "type": "object",
    "description": "ItemService \n\n\n#path:\"/item/\"#"
   },
   "ItemWithID": {
    "required": [
     "item_id"
    ],
    "type": "object",
    "allOf": [
     {
      "allOf": [
       {
        "$ref": "#/components/schemas/Item"
       }
      ],
      "description": "Item is a item\n"
     }
    ],
    "properties": {
     "item_id": {
      "type": "string",
      "format": "int64"
     }
    },
    "description": "ItemWithID is Item with ID\n"
   },
   "Midd": {
    "required": [
     "midd_id",
     "name",
     "message"
    ],
    "type": "object",
    "properties": {
     "message": {
      "type": "string",
      "description": "Name is the message\n"
     },
     "midd_id": {
      "type": "integer",
      "description": "MiddID is the Midd ID\n",
      "format": "int64"
     },
     "name": {
      "type": "string",
      "description": "Name is the name\n"
     }
    },
    "description": "Midd is a midd\n"
   },
   "MiddService": {
    "type": "object",
    "description": "MiddService \n\n\n#path:\"/midd/\"#"
   },
   "MiddWithID": {
    "required": [
     "midd_id"
    ],
    "type": "object",
    "allOf": [
     {
      "allOf": [
       {
        "$ref": "#/components/schemas/Midd"
       }
      ],
      "description": "Midd is a midd\n"
     }
    ],
    "properties": {
     "midd_id": {
      "type": "integer",
      "format": "int64"
     }
    },
    "description": "MiddWithID is Midd with ID\n"
   },
   "Reader": {
    "type": "string",
    "description": "Reader is the interface that wraps the basic Read method.\nRead reads up to len(p) bytes into p. It returns the number of bytes\nread (0 \u003c= n \u003c= len(p)) and any error encountered. Even if Read\nreturns n \u003c len(p), it may use all of p as scratch space during the call.\nIf some data is available but not len(p) bytes, Read conventionally\nreturns what is available instead of waiting for more.\nWhen Read encounters an error or end-of-file condition after\nsuccessfully reading n \u003e 0 bytes, it returns the number of\nbytes read. It may return the (non-nil) error from the same call\nor return the error (and n == 0) from a subsequent call.\nAn instance of this general case is that a Reader returning\na non-zero number of bytes at the end of the input stream may\nreturn either err == EOF or err == nil. The next Read should\nreturn 0, EOF.\nCallers should always process the n \u003e 0 bytes returned before\nconsidering the error err. Doing so correctly handles I/O errors\nthat happen after reading some bytes and also both of the\nallowed EOF behaviors.\nImplementations of Read are discouraged from returning a\nzero byte count with a nil error, except when len(p) == 0.\nCallers should treat a return of 0 and nil as indicating that\nnothing happened; in particular it does not indicate EOF.\nImplementations must not retain p.\n",
    "format": "binary"
   },
   "Session": {
    "type": "object"
   }
  },
  "responses": {
   "auth_body": {
    "description": "Response code is 200",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/AuthWithID"
      }
     }
    }
   },
   "auths_body": {
    "description": "Response code is 200",
    "content": {
     "application/json": {
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/components/schemas/AuthWithID"
       }
      }
     }
    }
   },
   "e_body": {
    "description": "\n\n#code:\"400\"#",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/Error"
      }
     }
    }
   },
   "err_body": {
    "description": "Response code is 400",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/Error"
      }
     },
     "text/plain": {
      "schema": {
       "type": "string",
       "format": "error"
      }
     }
    }
   },
   "err_body.1": {
    "description": "Response code is 400",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/Error"
      }
     },
     "text/plain": {
      "schema": {
       "type": "string",
       "format": "error"
      }
     }
    }
   },
   "err_body.2": {
    "description": "Response code is 400",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/Error"
      }
     },
     "text/plain": {
      "schema": {
       "type": "string",
       "format": "error"
      }
     }
    }
   },
   "err_body.3": {
    "description": "Response code is 400",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/Error"
      }
     },
     "text/plain": {
      "schema": {
       "type": "string",
       "format": "error"
      }
     }
    }
   },
   "err_body.4": {
    "description": "Response code is 400",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/Error"
      }
     },
     "text/plain": {
      "schema": {
       "type": "string",
       "format": "error"
      }
     }
    }
   },
   "file_body": {
    "description": "\n\n#content:\"application/octet-stream\"#",
    "content": {
     "application/octet-stream": {
      "schema": {
       "type": "string",
       "format": "binary"
      }
     }
    }
   },
   "filename_body": {
    "description": "Response code is 200",
    "content": {
     "application/json": {
      "schema": {
       "type": "string"
      }
     }
    }
   },
   "item_body": {
    "description": "Response code is 200",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/ItemWithID"
      }
     }
    }
   },
   "items_body": {
    "description": "Response code is 200",
    "content": {
     "application/json": {
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/components/schemas/ItemWithID"
       }
      }
     }
    }
   },
   "midd_body": {
    "description": "Response code is 200",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/MiddWithID"
      }
     }
    }
   },
   "midds_body": {
    "description": "Response code is 200",
    "content": {
     "application/json": {
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/components/schemas/MiddWithID"
       }
      }
     }
    }
   },
   "session_body": {
    "description": "Response code is 200",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/Session"
      }
     }
    }
   },
   "token_body": {
    "description": "Response code is 200",
    "content": {
     "application/json": {
      "schema": {
       "type": "string"
      }
     }
    }
   },
   "userID_body": {
    "description": "Response code is 200",
    "content": {
     "application/json": {
      "schema": {
       "type": "integer",
       "format": "uint64"
      }
     }
    }
   }
  },
  "parameters": {
   "auth_id_path": {
    "name": "auth_id",
    "in": "path",
    "description": "\n\n#name:\"auth_id\"#",
    "required": true,
    "explode": false,
    "schema": {
     "type": "integer",
     "format": "int64"
    }
   },
   "filename_path": {
    "name": "filename",
    "in": "path",
    "required": true,
    "explode": false,
    "schema": {
     "type": "string"
    }
   },
   "item_id_path": {
    "name": "item_id",
    "in": "path",
    "description": "\n\n#name:\"item_id\"#",
    "required": true,
    "explode": false,
    "schema": {
     "type": "integer",
     "format": "int64"
    }
   },
   "limit_query": {
    "name": "limit",
    "in": "query",
    "explode": false,
    "schema": {
     "type": "integer",
     "format": "int64"
    }
   },
   "limit_query.1": {
    "name": "limit",
    "in": "query",
    "explode": false,
    "schema": {
     "type": "integer",
     "format": "int64"
    }
   },
   "limit_query.2": {
    "name": "limit",
    "in": "query",
    "explode": false,
    "schema": {
     "type": "integer",
     "format": "int64"
    }
   },
   "midd_id_path": {
    "name": "midd_id",
    "in": "path",
    "description": "\n\n#name:\"midd_id\"#",
    "required": true,
    "explode": false,
    "schema": {
     "type": "integer",
     "format": "int64"
    }
   },
   "offset_query": {
    "name": "offset",
    "in": "query",
    "explode": false,
    "schema": {
     "type": "integer",
     "format": "int64"
    }
   },
   "offset_query.1": {
    "name": "offset",
    "in": "query",
    "explode": false,
    "schema": {
     "type": "integer",
     "format": "int64"
    }
   },
   "offset_query.2": {
    "name": "offset",
    "in": "query",
    "explode": false,
    "schema": {
     "type": "integer",
     "format": "int64"
    }
   },
   "token_header": {
    "name": "token",
    "in": "header",
    "description": "\n\n#in:\"header\"#",
    "explode": false,
    "schema": {
     "type": "string"
    }
   },
   "x-token_header": {
    "name": "x-token",
    "in": "header",
    "description": "\n\n#in:\"header\" name:\"x-token\"#",
    "explode": false,
    "schema": {
     "type": "string"
    }
   }
  },
  "requestBodies": {
   "auth_body": {
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/Auth"
      }
     }
    }
   },
   "file_body": {
    "content": {
     "multipart/form-data": {
      "schema": {
       "type": "object",
       "properties": {
        "file": {
         "$ref": "#/components/schemas/Reader"
        }
       }
      }
     }
    }
   },
   "item_body": {
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/Item"
      }
     }
    }
   },
   "midd_body": {
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/Midd"
      }
     }
    }
   }
  },
  "securitySchemes": {
   "VerifyApiKey": {
    "type": "apiKey",
    "description": "VerifyApiKey \n\n#security:\"apiKey\"#",
    "name": "token",
    "in": "header"
   },
   "VerifyBasic": {
    "type": "http",
    "description": "VerifyBasic \n\n#security:\"basic\"#",
    "scheme": "basic"
   }
  }
 },
 "tags": [
  {
   "name": "AuthService",
   "description": "AuthService \n\n\n#path:\"/auth/\"#"
  },
  {
   "name": "FileService",
   "description": "FileService \n\n\n#path:\"/file/\"#"
  },
  {
   "name": "Group",
   "description": "Group \n\n\n#path:\"/group\"#"
  },
  {
   "name": "ItemService",
   "description": "ItemService \n\n\n#path:\"/item/\"#"
  },
  {
   "name": "MiddService",
   "description": "MiddService \n\n\n#path:\"/midd/\"#"
  }
 ]
}